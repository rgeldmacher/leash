apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

Properties localProperties = new Properties()
localProperties.load(project.rootProject.file('local.properties').newDataInputStream())
def sdkDir = localProperties.getProperty('sdk.dir')

Properties versionProperties = new Properties()
versionProperties.load(project.rootProject.file('version.properties').newDataInputStream())
def leashVersion = versionProperties.getProperty('version.name')
def leashVersionDesc = versionProperties.getProperty('version.description')

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Leash',
                'Implementation-Version': leashVersion
    }

    baseName = project.name + '-' + leashVersion + '-all'
    from { configurations.default.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

publishing {
    publications {
        Maven(MavenPublication) {
            groupId 'com.rgeldmacher.leash'
            artifactId 'leash'
            version leashVersion

            from components.java

            artifact sourcesJar {
                classifier "sources"
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.bintrayUser : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayKey') ? project.bintrayKey : System.getenv('BINTRAY_KEY')
    publications = ['Maven']
    dryRun = false
    publish = true

    pkg {
        repo = 'maven'
        name = 'com.rgeldmacher.leash'
        desc = 'Annotation support for retaining objects during orientation change on Android.'
        websiteUrl = 'https://github.com/rgeldmacher/leash'
        issueTrackerUrl = 'https://github.com/rgeldmacher/leash/issues'
        vcsUrl = 'https://github.com/rgeldmacher/leash.git'
        licenses = ['Apache-2.0']
        labels = ['android']
        publicDownloadNumbers = true

        version {
            name = leashVersion
            desc = leashVersionDesc
            vcsTag = leashVersion
        }
    }
}

configurations {
    provided {
        dependencies.all { dep ->
            configurations.default.exclude group: dep.group, module: dep.name
        }
    }
    compile.extendsFrom provided
}

repositories {
    flatDir(dirs: file(sdkDir + '/platforms/android-22'))
    flatDir(dirs: file(sdkDir + '/extras/android/support/v4'))
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.squareup:javapoet:1.1.0'
    provided (':android@jar') {
        exclude group: '*'
    }
    provided (':android-support-v4@jar') {
        exclude group: '*'
    }
    testCompile 'junit:junit:4.12'
    testCompile 'com.google.testing.compile:compile-testing:0.7'
    testCompile files(org.gradle.internal.jvm.Jvm.current().getToolsJar())
}
